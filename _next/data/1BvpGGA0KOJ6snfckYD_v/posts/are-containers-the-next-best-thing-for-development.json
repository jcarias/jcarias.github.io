{"pageProps":{"navBarItems":{"CallToAction":{"TargetUrl":"/contacts","Text":"Get In Touch","__typename":"ComponentCommonLink"},"Links":[{"Text":"Articles","TargetUrl":"/articles","__typename":"ComponentCommonLink"},{"Text":"About Me","TargetUrl":"/about","__typename":"ComponentCommonLink"},{"Text":"Contacts","TargetUrl":"/contacts","__typename":"ComponentCommonLink"}],"Logo":{"url":"https://res.cloudinary.com/di4rpgxsx/image/upload/v1604316503/Logo_2c86506437.png","__typename":"UploadFile"},"__typename":"NavBarItems"},"article":{"Hero":{"id":"3","Title":"Are Containers the Next Best Thing for  Development?","Subtitle":null,"BackgroundImage":[{"url":"https://res.cloudinary.com/di4rpgxsx/image/upload/v1604512936/frank_mckenna_tj_X_sni_Nzg_Q_unsplash_00267db9f4.jpg","mime":"image/jpeg","__typename":"UploadFile"}],"__typename":"ComponentCommonHero"},"MetaData":{"MetaTitle":"JCarias - Are Containers the Next Best Thing for  Development?","MetaDescription":"Artilce about development using containers","MetaKeywords":"Containers, Development, Docker","MetaImage":null,"__typename":"ComponentCommonMetaData"},"id":"1","Title":"Are Containers the Next Best Thing for  Development?","SubTitle":null,"Content":"Recently, Containers (Kubernetes and Dockers), have become a buzzword in the IT world. It’s success and tremendous adoption is due to \nhow it makes easy to solve one of the biggest DevOps problems today: **The Deployment**.\n\nThis problem arises from the fact that you need to accommodate a lot of different technologies (software and hardware) in a lot of different \nenvironments from the development until the production stages, and the configurations for all these environments are complex and error \nprone leading to situations were the software runs in one environment, but not in the other. With containers, this is not an issue.\n\n> If it works in one container correctly it will run in every container, no matter the hardware or the OS where the containers are running.\n\nIn short, containers allow you to package up an application with all the parts needed, such as libraries and dependencies, and deploy it as \nsingle package which is OS agnostic, like if it was a Mobile App, with its own sandbox, but better because you’d be able to install the exact \nsame app in both Android and iOS. Containers gained popularity when Docker was released in 2013, making containers easy to use, not \nonly in Linux but also in Windows and OS X.\n\nThe biggest advantages of containers when compared with Virtual Machines (VM) are the speed and the lower resource usage. Per host \nmachine, you can have more containers than VMs, with a performance increase in both boot speed and container size than you would have \nwith VMs. This not only brings down infrastructure costs (both Cloud and on premises) but also the operational costs, since maintenance of \nall environments are pretty much the same.\n\nAlthough there are clear advantages to work with Containers, as described in the huge number of articles that we can find online (stating \nhow awesome containers can be used for software development) there are also some drawbacks: development using containers require \nthe setup of a complex container environments and will require a controlled release management (which can be eased up with automation \ndevelopment support tools (such as Maven, Jenkins, SonarQube). It also brings a risk of development slowness (as the project grows the \nslowness and complexity would grow with it). This slowness is compensated with the main major advantage of Containers: How easy it is to \nperform a deployment.\n\n> Containers deployment is easy and fast because you no longer need to worry about complex, and error prone, specific configurations for each environment. Now, if it works as it should in one container it will work, for sure, on every container in any environment. No longer we will have the episodes of “It was working on my machine…”!\n\nBesides the obvious advantage of this kind of setup, a quicker onboarding for new team members, there is other like the need to setup a \nsingle environment either for development and to deployment.\n\n\n## Conclusion\n\nBottom line is yes, for most of our client projects it makes sense to setup development environments on top of a container-based \nenvironments, even considering the price that you have to pay to setup a complex development environment and loose some of the speed \nof developing in a native environment.\n\n[Docker](https://www.docker.com/) is an open source implementation of Linux containers. Containers are based in a Linux feature called cgourps, that limits and \nisolates the use of resources (CPU, RAM, OI, network, …) to a collection of processes. This feature is a part of the Linux kernel since version \n2.6.24, release in January 2008.\n\n[Kubernetes](https://kubernetes.io/) are an open-source container-orchestration system. It works with a range of container tools, including Docker.\n\nExample of a docker file:\n```dockerfile\nFROM ubuntu:18.04\nCOPY . /app\nRUN make /app\nCMD python /app/app.py\n```","PublishedDate":"2019-08-20T11:00:00.000Z","Summary":"Recently, Containers (Kubernetes and Dockers), have become a buzzword in the IT world. It’s success and tremendous adoption is due to \nhow it makes easy to solve one of the biggest DevOps problems today: **The Deployment**.","PageUrl":"are-containers-the-next-best-thing-for-development","author":{"id":"1","Name":"João Carias","Email":"carias.joao@gmail.com","SocialMediaLinks":[{"Text":"@joao_carias","TargetUrl":"https://twitter.com/joao_carias","Type":"Twitter","__typename":"ComponentCommonLink"},{"Text":"Linked In","TargetUrl":"https://www.linkedin.com/in/jcarias/","Type":"LinkedIn","__typename":"ComponentCommonLink"},{"Text":"github.com/jcarias","TargetUrl":"https://github.com/jcarias","Type":"GitHub","__typename":"ComponentCommonLink"}],"articles":[{"id":"1","Title":"Are Containers the Next Best Thing for  Development?","__typename":"Articles"},{"id":"2","Title":"Become a Cleaner Coder Quickly","__typename":"Articles"}],"Picture":{"url":"https://res.cloudinary.com/di4rpgxsx/image/upload/v1604424646/rsz_img_1698_00c805469c.jpg","__typename":"UploadFile"},"__typename":"Authors"},"__typename":"Articles"}},"__N_SSG":true}